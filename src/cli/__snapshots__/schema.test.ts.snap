// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`schema > createSchema 1`] = `
{
  "$schemaVersion": "dualshock:1",
  "emits": {
    "some-ns-for-events:event-in-some-ns-for-events": {
      "payload": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "additionalProperties": false,
        "properties": {
          "eventKey": {
            "type": "string",
          },
        },
        "required": [
          "eventKey",
        ],
        "type": "object",
      },
    },
  },
  "rpc": {
    "ping": {
      "args": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "format": "date-time",
        "type": "string",
      },
      "returns": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "format": "date-time",
        "type": "string",
      },
    },
    "rpc-in-root-ns": {
      "args": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "number",
      },
    },
    "some-ns:rpc-in-some-ns": {
      "args": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "additionalProperties": false,
        "properties": {
          "nullableArg": {
            "type": [
              "number",
              "null",
            ],
          },
          "someArg": {
            "type": "string",
          },
        },
        "required": [
          "someArg",
          "nullableArg",
        ],
        "type": "object",
      },
      "returns": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "string",
      },
    },
  },
}
`;

exports[`typescript > createTypescript 1`] = `
"// This file was automagically generated by the @ptah/dualshock package
// DO NOT EDIT
//
import { z, type ZodType } from 'zod';

export const DualshockEvents = {
  "some-ns-for-events:event-in-some-ns-for-events": {
    payload: z.object({ "eventKey": z.string() }),
  },
} as const;

export type DualshockEvents = {
  [key in keyof typeof DualshockEvents]: {
    payload: z.infer<typeof DualshockEvents[key]["payload"]>;
  };
};

export const DualshockInvokables = {
  "ping": {
    args: z.string().datetime({ offset: true }),
    returns: z.string().datetime({ offset: true }),
  },
  "rpc-in-root-ns": {
    args: z.number(),
    returns: undefined,
  },
  "some-ns:rpc-in-some-ns": {
    args: z.object({ "someArg": z.string(), "nullableArg": z.union([z.number(), z.null()]) }),
    returns: z.string(),
  },
} as const;

export type DualshockInvokables = {
  [key in keyof typeof DualshockInvokables]: {
    args: z.infer<typeof DualshockInvokables[key]["args"]>;
    returns: DualshockInvokables[key]["returns"] extends ZodType<infer T> ? T : undefined;
  };
}"
`;
